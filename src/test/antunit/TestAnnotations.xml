<?xml version="1.0" encoding="UTF-8"?>
<!--
 * (C) Copyright Uwe Schindler (Generics Policeman) and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<project xmlns:au="antlib:org.apache.ant.antunit">

  <target name="testAnnotations">
    <au:expectfailure expectedMessage="Check for forbidden API calls failed, see log">
      <forbiddenapis failOnMissingClasses="true" classpath="${basedir}">
        <fileset file="Java8Annotations*.class"/>
        Java8Annotations$ClassFileOnly @ Forbidden class-only annotation
        Java8Annotations$FooBar @ Forbidden annotation
        java.lang.Deprecated @ Deprecated annotation
      </forbiddenapis>
    </au:expectfailure>
    <au:assertLogContains level="error" text="Java8Annotations$ClassFileOnly [Forbidden class-only annotation]"/> 
    <au:assertLogContains level="error" text="Java8Annotations$FooBar [Forbidden annotation]"/> 
    <au:assertLogContains level="error" text="java.lang.Deprecated [Deprecated annotation]"/> 
    <au:assertLogContains level="error" text=" 16 error(s)"/> 
  </target>
  
  <target name="testMissingDeprecatedAnnotation">
    <au:expectfailure expectedMessage="Check for forbidden API calls failed, see log">
      <forbiddenapis failOnMissingClasses="true" classpath="${basedir}">
        <file file="Java7DeprecatedAnnotation.class"/>
        java.lang.Deprecated @ Deprecated annotation
      </forbiddenapis>
    </au:expectfailure>
    <au:assertLogContains level="error" text="java.lang.Deprecated [Deprecated annotation]"/> 
    <au:assertLogContains level="error" text=" 1 error(s)"/> 
  </target>
  
  <target name="testSuppressAnnotationsDeprecated1">
    <forbiddenapis failOnMissingClasses="true" classpath="${basedir}" suppressAnnotation="java.lang.Deprecated">
      <file file="Java7DeprecatedAnnotation.class"/>
      java.lang.StringBuilder
    </forbiddenapis>
    <au:assertLogContains text=" 0 error(s)."/> 
  </target>
  
  <target name="testSuppressAnnotationsDeprecated2">
    <forbiddenapis failOnMissingClasses="true" classpath="${basedir}">
      <suppressAnnotation classname="java.lang.Deprecated"/>
      <file file="Java7DeprecatedAnnotation.class"/>
      java.lang.StringBuilder
    </forbiddenapis>
    <au:assertLogContains text=" 0 error(s)."/> 
  </target>
  
  <target name="testSuppressAnnotationsJava8">
    <forbiddenapis failOnMissingClasses="true" classpath="${basedir}">
      <!-- this should disable whole class scanning: -->
      <suppressAnnotation classname="*$FooBar"/>
      <!-- normally, this should produce similar errors like 'testAnnotations': -->
      <file file="Java8Annotations.class"/>
      Java8Annotations$ClassFileOnly @ Forbidden class-only annotation
      Java8Annotations$FooBar @ Forbidden annotation
      java.lang.Deprecated @ Deprecated annotation
    </forbiddenapis>
    <au:assertLogContains text=" 0 error(s)."/> 
  </target>
  
  <target name="testSuppressAnnotationsJava8ClassFileOnly">
    <forbiddenapis failOnMissingClasses="true" classpath="${basedir}">
      <suppressAnnotation classname="Java8Annotations$ClassFileOnly"/>
      <file file="Java8Annotations.class"/>
      java.lang.StringBuilder
    </forbiddenapis>
    <au:assertLogContains text=" 0 error(s)."/> 
  </target>
  
</project>
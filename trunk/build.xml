<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<project name="Jar Jar Links" default="jar" xmlns:artifact="antlib:org.apache.maven.artifact.ant" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:rsel="antlib:org.apache.tools.ant.types.resources.selectors">
  <fail message="Minimum supported ANT version is 1.8.0. Yours: ${ant.version}">
    <condition>
      <not><antversion atleast="1.8.0" /></not>
    </condition>
  </fail>

  <property file="${user.home}/build.properties" />
  <property file="build.properties" />

  <property name="jdk.version" value="1.5"/>

  <property name="compile.debug" value="true"/>
  <property name="compile.deprecation" value="true"/>
  
  <property name="ivy.logging" value="download-only"/>
  
  <property name="signatures.dir" location="src/main/resources/de/thetaphi/forbiddenapis/signatures"/>

  <!-- define Maven coordinates -->
  <property name="groupId" value="de.thetaphi" />
  <property name="artifactId" value="forbiddenapis" />
  <property name="version" value="1.0-SNAPSHOT"/>

  <!-- define artifacts' name, which follows the convention of Maven -->
  <property name="jar-file" location="dist/${artifactId}-${version}.jar" />
  <property name="sources-jar-file" location="dist/${artifactId}-${version}-sources.jar" />

  <!-- defined maven snapshots and staging repository id and url -->
  <property name="maven-snapshots-repository-id" value="sonatype-nexus-snapshots" />
  <property name="maven-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots/" />
  <property name="maven-staging-repository-id" value="sonatype-nexus-staging" />
  <property name="maven-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />

  <target name="init">
    <ivy:cachepath pathid="path.build" conf="build" log="${ivy.logging}"/>
    <ivy:cachepath pathid="path.junit" conf="test" log="${ivy.logging}"/>
    <path id="path.run">
      <path refid="path.build"/>
      <pathelement path="build/main"/>
    </path>
    <path id="path.tools-run">
      <path refid="path.build"/>
      <pathelement path="build/tools"/>
    </path>
    <path id="path.test-build">
      <path refid="path.run"/>
      <path refid="path.junit"/>
    </path>
    <path id="path.test-run">
      <path refid="path.test-build"/>
      <pathelement path="build/test"/>
    </path>
  </target>

  <macrodef name="compile">
    <attribute name="module"/>
    <attribute name="classpathref"/>
    <sequential>
      <mkdir dir="build/@{module}"/>
      <copy todir="build/@{module}">
        <fileset dir="src/@{module}/resources" erroronmissingdir="false" />
      </copy>
      <javac includeantruntime="false" srcdir="src/@{module}/java" destdir="build/@{module}"
        source="${jdk.version}" target="${jdk.version}"
        debug="${compile.debug}" deprecation="${compile.deprecation}">
         <classpath refid="@{classpathref}"/>
         <compilerarg value="-Xlint"/>
      </javac>
    </sequential>
  </macrodef>

  <target name="compile" depends="init" description="Compile">
    <compile module="main" classpathref="path.build"/>
  </target>

  <target name="compile-test" depends="compile" description="Compile tests">
    <compile module="test" classpathref="path.test-build"/>
  </target>

  <target name="compile-tools" depends="init" description="Compile tools">
    <compile module="tools" classpathref="path.build"/>
  </target>

  <target name="clean" description="Clean">
    <delete dir="build"/>
    <delete dir="dist"/>
  </target>

  <target name="-resolve-jarjar" unless="resolved.jarjar">
    <ivy:cachepath pathid="path.jarjar" conf="jarjar" log="${ivy.logging}"/>
    <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpathref="path.jarjar"/>
    <property name="resolved.jarjar" value="true"/>
  </target>
  
  <target name="jar" depends="compile,-resolve-jarjar" description="Create the binary JAR">
    <ivy:cachefileset setid="fileset.bundle" conf="bundle" log="${ivy.logging}"/>
    <mkdir dir="dist"/>
    <jarjar destfile="${jar-file}">
      <fileset dir="build/main"/>
      <restrict>
        <name name="**/*.class" handledirsep="true"/>
        <archives>
          <zips><fileset refid="fileset.bundle"/></zips>
        </archives>
      </restrict>
      <keep pattern="de.thetaphi.forbiddenapis.AntTask"/>
      <rule pattern="org.objectweb.asm.**" result="de.thetaphi.forbiddenapis.asm.@1"/>
      <manifest>
        <attribute name="Implementation-Version" value="${version}"/>
      </manifest>
      <metainf dir="." includes="LICENSE.txt,NOTICE.txt"/>
      <metainf dir="licenses"/>
    </jarjar>
  </target>

  <target name="jar-src" description="Create source distribution">
    <mkdir dir="dist"/>
    <zip destfile="${sources-jar-file}" encoding="utf-8">
      <zipfileset dir="." includes="*.xml,*.txt,src/**,licenses/**" prefix="${artifactId}-${version}"/>
    </zip>
  </target>

	<target name="dist" depends="jar,jar-src" description="Create the distribution"/>

  <!--
	<target name="stage" depends="dist" description="deploy release version to Maven staging repository">
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=pom.xml" />
			<arg value="-Dfile=${maven-jar}" />
      <arg value="-Pgpg" />
		</artifact:mvn>

		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=pom.xml" />
			<arg value="-Dfile=${maven-sources-jar}" />
			<arg value="-Dclassifier=sources" />
      <arg value="-Pgpg" />
		</artifact:mvn>
	</target>

  <target name="mojo" depends="jar" description="Create Maven plugin">
      <mkdir dir="dist"/>
      <copy todir="dist/maven">
        <fileset dir="src/main/maven"/>
        <filterset>
            <filter token="VERSION" value="${version}"/>
        </filterset>
      </copy>
      <jar jarfile="${jar-file.mojo}">
          <zipfileset src="${jar-file}"/>
          <zipfileset dir="dist/maven" prefix="META-INF/maven" includes="plugin.xml"/>
          <zipfileset
            dir="dist/maven"
            prefix="META-INF/maven/com.tonicsystems.jarjar/jarjar-plugin"
            includes="pom.xml,pom.properties"/>
      </jar>
  </target>
  -->

  <target name="test" depends="-junit,-check-myself" description="Run tests"/>

  <target name="-junit" depends="compile-test">
    <junit haltonfailure="on">
      <formatter type="plain" usefile="false"/>
      <classpath refid="path.test-run"/>
      <batchtest>
        <fileset dir="src/test/java" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>

  <target name="-check-myself" depends="compile-test,compile-tools">
    <taskdef name="forbiddenapis" classname="de.thetaphi.forbiddenapis.AntTask" classpathref="path.run"/>
    <forbiddenapis>
      <fileset dir="build/main" includes="**/*.class"/>
      <fileset dir="build/test" includes="**/*.class"/>
      <fileset dir="build/tools" includes="**/*.class"/>
      <bundledsignatures name="jdk-unsafe-${jdk.version}"/>
      <bundledsignatures name="jdk-deprecated-${jdk.version}"/>
    </forbiddenapis>
  </target>

  <target name="generate-deprecated" depends="compile-tools" description="Generates deprecated API signature lists for current JDK">
    <mkdir dir="${signatures.dir}"/>
    <echo message="Building deprecated signatures for JDK ${ant.java.version}:"/>
    <java fork="false" classpathref="path.tools-run" classname="de.thetaphi.forbiddenapis.DeprecatedGen">
      <arg value="${ant.java.version}"/>
      <arg file="${java.home}/lib/rt.jar"/>
      <arg file="${signatures.dir}/jdk-deprecated-${ant.java.version}.txt"/>
    </java>
  </target>

</project>